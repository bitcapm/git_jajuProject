<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="managerSQL">

<!-- selectList - 모든 회원 리스트 가져오기 -->
<select id="getManagerMember" parameterType="java.util.Map" resultType="member">
	
	<if test='sortinSelect == "member_date_desc" '>
		select * from 
		(select rownum rn, tt.* from
		(select * from jajumember order by member_date desc)tt)
		where rn &gt;=#{startNum} and rn &lt;=#{endNum}
	</if>
	
	<if test='sortinSelect == "member_date_asc" '>
		select * from 
		(select rownum rn, tt.* from
		(select * from jajumember order by member_date asc)tt)
		where rn &gt;=#{startNum} and rn &lt;=#{endNum}
	</if>
	
	<if test='sortinSelect == "member_manner_desc" '>
		select * from 
		(select rownum rn, tt.* from
		(select * from jajumember order by member_manner desc)tt)
		where rn &gt;=#{startNum} and rn &lt;=#{endNum}
	</if>
	
	<!-- <if test='sortinSelect == "sale_count_high" '>
		select * from 
		(select rownum rn, tt.* from
		(select count(*) from sale_board order by member_manner desc)tt)
		where rn &gt;=#{startNum} and rn &lt;=#{endNum}
	</if>-->

</select>


<delete id="managerMemberForm" parameterType="java.util.Map" >
	delete from jajumember where member_id in 
	<foreach collection="array" item="data" open="(" close=")" separator=",">
		#{data}
	<!-- ${array[i]} -->
	</foreach>
</delete>

<!-- 선택한 회원 활동중지, 상태 0->1으로 변경  -->
<update id="changeMemberState" parameterType="java.util.Map" >
	update jajumember set member_state='1' where member_id in
	<foreach collection="array" item="data" open="(" close=")" separator=",">
		#{data}
	<!-- ${array[i]} -->
	</foreach>
</update>

<!-- 검색 결과 가져오기. 닉네임, 이메일,  -->
<select id="getSearchMemberInfo" parameterType="java.util.Map" resultType="member">
	
	<if test='searchMode == "member_id" '>
		select * from 
		(select rownum rn, tt.* from
		(select * from jajumember where member_id like '%'||#{search-text}||'%' order by member_date desc)tt)
		where rn &gt;=#{startNum} and rn &lt;=#{endNum}
	</if>
	
	<if test='searchMode == "member_email"'>
		select * from 
		(select rownum rn, tt.* from
		(select * from jajumember where member_email like '%'||#{search-text}||'%' order by member_date asc)tt)
		where rn &gt;=#{startNum} and rn &lt;=#{endNum}
	</if>
	
	<if test='searchMode == "member_id_email"'>
		select * from 
		(select rownum rn, tt.* from
		(select * from jajumember where member_id like '%'||#{search-text}||'%' or member_email like '%'||#{search-text}||'%' order by member_date desc)tt)
		where rn &gt;=#{startNum} and rn &lt;=#{endNum}
	</if>
</select>

<!-- 블랙리스트(활동중지 회원) 불러오기 -->
<select id="getManagerMemberBlack" parameterType="java.util.Map" resultType="member">
	
	<if test='sortinSelect == "break_member" '>
		select * from 
		(select rownum rn, tt.* from
		(select * from jajumember where member_state='1' order by member_date desc)tt)
		where rn &gt;=#{startNum} and rn &lt;=#{endNum}
	</if>
	
<!-- 	<if test='sortinSelect == "delete_member"'>
		select * from 
		(select rownum rn, tt.* from
		(select * from jajumember where member_state='2' order by member_date desc)tt)
		where rn &gt;=#{startNum} and rn &lt;=#{endNum}
	</if> -->
	
</select>
 
<!-- 게시판 관리 -->
<select id="getManagerFreeboardList" resultType="freeboard">
 			select * from (
	 		select rownum rn ,tt.*from(
	 		select * from freeboard order by logtime desc)tt)
	 		<![CDATA[where rn >= ${startNum} and rn <=${endNum}]]>
</select>

<select id="getTotalA" resultType="int">
	select count(*) as count from freeboard
</select>

<select id="getManagerFreeboardView" parameterType="int" resultType="freeboard">
	select * from freeboard where board_seq = #{board_seq}
</select>

 <!-- 삭제 -->
 <delete id="managerFreeboardDelete" parameterType="int">
 	delete freeboard where board_seq=#{board_seq}
</delete>

<!-- 댓글 불러오기 -->
	<select id="getManagerFreeboardComment" parameterType="java.util.Map" resultType="freeboardComment">
		select * from (
 		select rownum rn ,tt.*from(
 		select * from freeboard_comment where board_seq = ${board_seq} order by comment_ref desc, comment_step asc)tt)
 		<![CDATA[where rn >= ${startNum} and rn <=${endNum}]]>
	</select>
	
	<select id="getCommentTotal2" resultType="int" parameterType="Integer">
		select count(*) as count from freeboard_comment where board_seq=${board_seq}
	</select>
	
<!-- 댓글 1개 가져오기 -->
	<select id="getManagerFreeboardCommentOne" parameterType="Integer" resultType="freeboardComment">
		select * from freeboard_comment where comment_seq = ${comment_pseq}
	</select>
	
<!-- 댓글 삭제 -->
	<delete id="managerCommentDelete" parameterType="freeboardComment">
		begin
 			update freeboard_comment set comment_content =  '[원글이 삭제된 답글]'||comment_content where comment_pseq = #{comment_seq};
 			delete freeboard_comment where comment_seq = #{comment_seq};
 		end;
	</delete>
	
<!-- 이전글, 다음글 -->
	<select id="getPage" parameterType="int" resultType="freeboard">
		select * from(
		select board_seq,
			lag(board_seq, 1, 0) over(order by board_seq desc) prev_num,
			lag(board_subject, 1, '이전글이 없습니다') over (order by board_seq desc) prev_subject,
			lead(board_seq,1,0) over (order by board_seq desc) next_num,
			lead(board_subject, 1, '다음글이 없습니다') over (order by board_seq desc) next_subject
		from freeboard) 
		where board_seq=#{board_seq}
	</select>	 

 </mapper>